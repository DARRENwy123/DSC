#include <stdio.h>


#define MaxSize 50
typedef int ElemType;

typedef struct {
    ElemType data[MaxSize];
    int length;

}Sqlist;

bool insert(Sqlist & L,int val,int pos){
    if(L.length == MaxSize){
        return false;
    }

    if(L.length+1 < pos || pos < 1) {
        return false;


    }
    //12345 pos = 3
    int i;
    for(i = L.length;i>=pos;i--){
        L.data[i] = L.data[i-1];

    }
    L.data[i] = val;
    L.length++;
    return true;
}

void alloutput(Sqlist L){
    for(int i = 0;i<L.length;i++){
        printf("%d ",L.data[i]);
    }
}

int search(Sqlist L,ElemType e){


    for(int i = 0; i < L.length ; i ++){
        if(e == L.data[i]){
            return i+1;
        }

    }
    return 0;


}

bool delete_element(Sqlist &L,int pos,int & del_reserve){
    //    12345 要删除第二个位置的元素
    if(pos < 1 || pos > L.length){
        return false;
    }
    // 1 5
    del_reserve = L.data[pos-1];
    for(int i = pos-1;i < L.length-1;i++){
        L.data[i] = L.data[i+1];


    }


    L.length--;
    return 1;







}

int main(){
    Sqlist sqlist;
    sqlist.data[0] = 0;
    sqlist.data[1] = 1;
    sqlist.data[2] = 2;
    sqlist.data[3] = 3;
    sqlist.data[4] = 4;
    sqlist.length = 5;

    alloutput(sqlist);
    bool ret;
    ret = insert(sqlist,60,2);
    ret = 1;
    if(ret == true){
        printf("插入成功！");
        alloutput(sqlist);

    }else{
        printf("插入失败");
    }

    printf("\n");
    printf("下面开始查找元素\n");

    int vf = search(sqlist,100);
    if(vf){
        printf("成功找到指定元素\n");
        printf("指定元素的位置为%d\n",vf);

    }else{
        printf("没有找到元素\n");
    }
    vf = search(sqlist,60);
    if(vf){
        printf("成功找到指定元素\n");
        printf("指定元素的位置为%d\n",vf);

    }else{
        printf("没有找到元素\n");
    }

    printf("\n下面开始删除元素\n");
    int del_reserve;
    bool ret1 = delete_element(sqlist,2,del_reserve);
    if(ret1){
        printf("删除元素成功\n");
        printf("删除的元素是 %d \n",del_reserve);
        alloutput(sqlist);
    }else{
        printf("删除元素失败\n");
    }





}
